#!/usr/bin/env bash
set -eo pipefail

BP_DIR=$(cd $(dirname $0)/..; pwd)
echo "BP_DIR: " $BP_DIR
LAYERS_DIR="$1"
echo "LAYERS_DIR: " $LAYERS_DIR
MW_LAYER="$LAYERS_DIR/middleware"
echo "MW_LAYER: " $MW_LAYER

# Setup caching layer for middleware node_modules
NODE_MODULES_DIR="${LAYERS_DIR}/node_modules" # the actual layer where the caching values are saved to
touch "${NODE_MODULES_DIR}.toml"              # the layer toml file that tells lifecycle to enable cache
mkdir -p "${NODE_MODULES_DIR}"

# Setup caching layer for Typescript dist directory.  Worst case, tsc should only
# run once.  This middleware is more or less an external library that doesn't need 
# to be built more than once (maybe never).  The only time it should be rebuilt is
# after a new version of the middleware has been released e.g. version update to
# package-lock.json file.
DIST_DIR="${LAYERS_DIR}/dist"
touch "${DIST_DIR}.toml"
mkdir -p "${DIST_DIR}"

# Create directory where ENV vars will be defined
mkdir -p "$MW_LAYER/env"

#BP_DIR has all the files that's untared from the buildpack targz 
#copy all the source files to MW_LAYER folder
cp -a "$BP_DIR/middleware/." $MW_LAYER

local_lock_checksum=$(sha256sum "${MW_LAYER}/package-lock.json" | cut -d " " -f 1)
cached_lock_checksum=$(yj -t < "${NODE_MODULES_DIR}.toml" | jq -r ".metadata.package_lock_checksum")

if [[ "$local_lock_checksum" == "$cached_lock_checksum" ]] ; then
    echo "using previous node_modules and dist artifacts from cache"
    cp -r "${NODE_MODULES_DIR}/." "${MW_LAYER}/node_modules"
    cp -r "${DIST_DIR}/." "${MW_LAYER}/dist"
else
    echo "cache = true" > "${NODE_MODULES_DIR}.toml"
    {
      echo "build = false"
      echo "launch = false"
      echo -e "[metadata]\npackage_lock_checksum = \"$local_lock_checksum\""
    } >> "${NODE_MODULES_DIR}.toml"

    # Use the same caching, build, and launch settings as the node_modules.toml
    # The only time the tsc should be re-ran is if there's been a change to
    # the package-lock.json file e.g. verion update/new release.
    cat "${NODE_MODULES_DIR}.toml" >> "${DIST_DIR}.toml"

    pushd $MW_LAYER
      npm install --only=production
      npm run build
    popd
    cp -r "${MW_LAYER}/node_modules/." "${NODE_MODULES_DIR}"
    cp -r "${MW_LAYER}/dist/." "${DIST_DIR}"
fi

mkdir -p "$MW_LAYER/env.launch"
echo -n "$MW_LAYER" > "$MW_LAYER/env.launch/FUNCTION_URI.override"
if [[ ! -z "${DEBUG_PORT}" ]]; then
  echo -n "--inspect=0.0.0.0:${DEBUG_PORT}" > "$MW_LAYER/env.launch/NODE_OPTIONS.override"
fi
echo "launch = true" > "$MW_LAYER.toml"
